orbs:
  slack: circleci/slack@3.4.1
version: 2.1
jobs:
  build:
    # remove if parallelism is not desired
    parallelism: 2
    environment:
      # configure the jvm and gradle to avoid oom errors
      _java_options: "-xmx3g"
      gradle_opts: "-dorg.gradle.daemon=false -dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
      - image: circleci/postgres:12-alpine
        environment:
          postgres_user: postgres
          postgres_db: circle_test
    steps:
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: run tests in parallel
          # use "./gradlew test" instead if tests are not run in parallel
          command: |
            cd src/test/java
            # get list of classnames of tests that should run on this node
            classnames=$(circleci tests glob "**/*.java" \
              | cut -c 1- | sed 's@/@.@g' \
              | sed 's/.\{5\}$//' \
              | circleci tests split --split-by=timings --timings-type=classname)
            cd ../../..
            # format the arguments to "./gradlew test"
            gradle_args=$(echo $classnames | awk '{for (i=1; i<=nf; i++) print "--tests",$i}')
            echo "prepared arguments for gradle: $gradle_args"
            ./gradlew test $gradle_args
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
          when: always
      - run:
          name: assemble jar
          command: |
            # skip this for other nodes
            if [ "$circle_node_index" == 0 ]; then
              ./gradlew assemble
            fi
      # this will be empty for all nodes except the first one
      - store_artifacts:
          path: build/libs
      #- slack/status:
          #channel: 'cqxfhc0tx' #circleci_test
          #mentions: 'uqza86w2k'
          ##webhook: https://hooks.slack.com/services/tqxepfz8v/bqt387r0b/xbgibvvptyajorxbj3pjuqn2
          #webhook: '${slack_webhook}'
workflows:
  version: 2.1
  workflow:
    jobs:
      - slack/approval-notification:
          channel: 'cqxfhc0tx' #circleci_test
          message: ${circle_branch}ビルド実施のため承認をお願いします。
          webhook: '${slack_webhook}'
      - build:
          type: approval
          requires:
            - slack/approval-notification